$env:GOOGLE_API_KEY = "AIzaSyD7tlRDTVZReMHpJ6P7ZbKDBG1HsOi_G1c"

Tidak perlu lagi membuat file problem.txt manual → user tinggal ketik soal langsung di GUI.

Pilih mode eksekusi → single agent atau parallel agent.

Set parameter seperti:

--num-agents

--timeout

--max-workers

--log-dir

--other_prompts

Tentukan nama file solusi yang akan di-save.

Tampilkan hasil langsung di GUI, termasuk log dan solusi jika ditemukan.

Kalau saya breakdown, alurnya nanti kira-kira begini:

User buka GUI

Pilih mode (single / parallel) → toggle atau radio button.

Masukkan parameter → text field / slider untuk angka.

Masukkan soal → textarea.

Masukkan nama file solusi → text field.

Saat tombol Run ditekan:

Simpan teks soal ke file sementara (problems/namafile.txt).

Jalankan agent.py atau run_parallel.py sesuai pilihan, via subprocess.

Tampilkan output/log ke jendela GUI secara real-time.

Jika selesai:

Tampilkan ringkasan hasil.

Kalau solusi ditemukan → tampilkan di kotak khusus solusi.

Saya sarankan memakai tkinter dulu untuk prototipe karena:

Bawaan Python (tidak perlu install library eksternal).

Bisa memanggil subprocess dan menampilkan hasil real-time.

Bisa pakai threading supaya GUI tidak freeze saat proses jalan.

Kalau mau lebih modern:

PyQt6 → lebih cantik, tapi butuh install.

Web UI (Streamlit / Flask + HTML) → bisa dijalankan di browser.

Kalau mau, saya bisa buatkan prototype GUI dengan tkinter untuk:

Memilih mode (single/parallel).

Input parameter.

Input soal.

Input nama file solusi.

Menjalankan proses + menampilkan hasil.